{"version":3,"sources":["views/ContactsView/ContactsPage.module.css","views/ContactsView/Teammate/Teammate.module.css","views/ContactsView/Teammate/SocialNets/SocialNets.module.css","views/ContactsView/Teammate/SocialNets/SocialNets.jsx","views/ContactsView/Teammate/Teammate.jsx","views/ContactsView/ContactsPage.jsx"],"names":["module","exports","SocialNet","title","link","className","style","net","href","aria-label","netButton","target","rel","netIcon","width","height","sprite","Teammate","fullname","position","photo","social","member","srcSet","webp","mobile","x1","x2","type","media","tablet","pc","src","alt","name","socialNets","map","ContactsPage","line","team","teamList","_id"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,MAAQ,4BAA4B,KAAO,2BAA2B,KAAO,6B,krWCA/FD,EAAOC,QAAU,CAAC,OAAS,yBAAyB,SAAW,2BAA2B,MAAQ,wBAAwB,WAAa,+B,oBCAvID,EAAOC,QAAU,CAAC,IAAM,wBAAwB,UAAY,8BAA8B,QAAU,8B,qICuBrFC,MAlBf,YAAqC,IAAhBC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,KAC1B,OACE,oBAAIC,UAAWC,IAAMC,IAArB,SACE,mBACEC,KAAMJ,EACNK,aAAA,4DAAyBN,GACzBE,UAAWC,IAAMI,UACjBC,OAAO,SACPC,IAAI,aALN,SAOE,qBAAKP,UAAWC,IAAMO,QAASC,MAAM,KAAKC,OAAO,KAAjD,SACE,qBAAKP,KAAI,UAAKQ,IAAL,YAAeb,YCuCnBc,MAlDf,YAA0D,IAAtCC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,OAC7C,OACE,qBAAIhB,UAAWC,IAAMgB,OAArB,UACE,oCACE,wBACEC,OAAM,UAAKH,EAAMI,KAAKC,OAAOC,GAAvB,gBAAiCN,EAAMI,KAAKC,OAAOE,GAAnD,OACNC,KAAK,aACLC,MAAM,uBAER,wBACEN,OAAM,UAAKH,EAAMK,OAAOC,GAAlB,gBAA4BN,EAAMK,OAAOC,GAAzC,OACNE,KAAK,aACLC,MAAM,uBAGR,wBACEN,OAAM,UAAKH,EAAMI,KAAKM,OAAOJ,GAAvB,gBAAiCN,EAAMI,KAAKM,OAAOH,GAAnD,OACNC,KAAK,aACLC,MAAM,wBAER,wBACEN,OAAM,UAAKH,EAAMU,OAAOJ,GAAlB,gBAA4BN,EAAMU,OAAOH,GAAzC,OACNC,KAAK,aACLC,MAAM,wBAGR,wBACEN,OAAM,UAAKH,EAAMI,KAAKO,GAAGL,GAAnB,gBAA6BN,EAAMI,KAAKO,GAAGJ,GAA3C,OACNC,KAAK,aACLC,MAAM,wBAER,wBACEN,OAAM,UAAKH,EAAMW,GAAGL,GAAd,gBAAwBN,EAAMW,GAAGJ,GAAjC,OACNC,KAAK,aACLC,MAAM,wBAER,qBAAKxB,UAAWC,IAAMc,MAAOY,IAAKZ,EAAMK,OAAOC,GAAIO,IAAKf,OAG1D,oBAAIb,UAAWC,IAAM4B,KAArB,SAA4BhB,IAC5B,mBAAGb,UAAWC,IAAMa,SAApB,SAA+BA,IAC/B,oBAAId,UAAWC,IAAM6B,WAArB,SACGd,EAAOe,KAAI,gBAAGjC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACV,cAAC,EAAD,CAAuBD,MAAOA,EAAOC,KAAMA,GAA3BD,YCtBXkC,UApBf,WACE,OACE,qCACE,oBAAIhC,UAAWC,IAAMH,MAArB,sBACA,sBAAME,UAAWC,IAAMgC,OACvB,oBAAIjC,UAAWC,IAAMiC,KAArB,SACGC,EAASJ,KAAI,gBAAGK,EAAH,EAAGA,IAAKvB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SAAUC,EAA5B,EAA4BA,MAAOC,EAAnC,EAAmCA,OAAnC,OACZ,cAAC,EAAD,CAEEH,SAAUA,EACVC,SAAUA,EACVC,MAAOA,EACPC,OAAQA,GAJHoB","file":"static/js/contacts-page.ab6150c6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactsPage_title__2BW6H\",\"line\":\"ContactsPage_line__K0e_9\",\"team\":\"ContactsPage_team__28lvu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"member\":\"Teammate_member__3dMpo\",\"position\":\"Teammate_position__1I_GH\",\"photo\":\"Teammate_photo__pt3aP\",\"socialNets\":\"Teammate_socialNets__14hqZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"net\":\"SocialNets_net__tuQry\",\"netButton\":\"SocialNets_netButton__3nC0J\",\"netIcon\":\"SocialNets_netIcon__1yPKZ\"};","import React from 'react';\nimport '../../../../css/common.css';\nimport style from './SocialNets.module.css';\nimport { string } from 'prop-types';\nimport sprite from '../../../../images/sprite.svg';\n\nfunction SocialNet({ title, link }) {\n  return (\n    <li className={style.net}>\n      <a\n        href={link}\n        aria-label={`ссылка на ${title}`}\n        className={style.netButton}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        <svg className={style.netIcon} width=\"35\" height=\"35\">\n          <use href={`${sprite}#${title}`}></use>\n        </svg>\n      </a>\n    </li>\n  );\n}\n\nexport default SocialNet;\n\nSocialNet.propTypes = {\n  title: string.isRequired,\n  link: string.isRequired,\n};\n","import React from 'react';\nimport '../../../css/common.css';\nimport style from './Teammate.module.css';\nimport { array, string, object } from 'prop-types';\nimport SocialNet from './SocialNets/SocialNets';\n\nfunction Teammate({ fullname, position, photo, social }) {\n  return (\n    <li className={style.member}>\n      <picture>\n        <source\n          srcSet={`${photo.webp.mobile.x1} 1x, ${photo.webp.mobile.x2} 2x`}\n          type=\"image/webp\"\n          media=\"(max-width: 767px)\"\n        />\n        <source\n          srcSet={`${photo.mobile.x1} 1x, ${photo.mobile.x1} 2x`}\n          type=\"image/jpeg\"\n          media=\"(max-width: 767px)\"\n        />\n\n        <source\n          srcSet={`${photo.webp.tablet.x1} 1x, ${photo.webp.tablet.x2} 2x`}\n          type=\"image/webp\"\n          media=\"(max-width: 1279px)\"\n        />\n        <source\n          srcSet={`${photo.tablet.x1} 1x, ${photo.tablet.x2} 2x`}\n          type=\"image/jpeg\"\n          media=\"(max-width: 1279px)\"\n        />\n\n        <source\n          srcSet={`${photo.webp.pc.x1} 1x, ${photo.webp.pc.x2} 2x`}\n          type=\"image/webp\"\n          media=\"(max-width: 1280px)\"\n        />\n        <source\n          srcSet={`${photo.pc.x1} 1x, ${photo.pc.x2} 2x`}\n          type=\"image/jpeg\"\n          media=\"(min-width: 1280px)\"\n        />\n        <img className={style.photo} src={photo.mobile.x1} alt={fullname} />\n      </picture>\n\n      <h3 className={style.name}>{fullname}</h3>\n      <p className={style.position}>{position}</p>\n      <ul className={style.socialNets}>\n        {social.map(({ title, link }) => (\n          <SocialNet key={title} title={title} link={link} />\n        ))}\n      </ul>\n    </li>\n  );\n}\n\nexport default Teammate;\n\nTeammate.propTypes = {\n  fullname: string.isRequired,\n  position: string.isRequired,\n  photo: object.isRequired,\n  social: array.isRequired,\n};\n","import React from 'react';\nimport '../../css/common.css';\nimport style from './ContactsPage.module.css';\nimport teamList from '../../teamList.json';\nimport { arrayOf, shape, string } from 'prop-types';\nimport Teammate from './Teammate/Teammate';\n\nfunction ContactsPage() {\n  return (\n    <>\n      <h1 className={style.title}>Our team</h1>\n      <span className={style.line}></span>\n      <ul className={style.team}>\n        {teamList.map(({ _id, fullname, position, photo, social }) => (\n          <Teammate\n            key={_id}\n            fullname={fullname}\n            position={position}\n            photo={photo}\n            social={social}\n          />\n        ))}\n      </ul>\n    </>\n  );\n}\n\nexport default ContactsPage;\n\nContactsPage.propTypes = {\n  teamList: arrayOf(\n    shape({\n      id: string.isRequired,\n    }),\n  ),\n};\n"],"sourceRoot":""}